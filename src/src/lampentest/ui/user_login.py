from PyQt5 import QtCore, QtGui, QtWidgets
from calculations.calc_generally import header_height, header_width, header_x, header_y
from calculations.calc_generally import logout_button_height, logout_button_width, logout_button_x, logout_button_y
from calculations.calc_user_login import confirm_button_height, confirm_button_width, confirm_button_x, confirm_button_y
from calculations.calc_user_login import keyboard_grid_height, keyboard_grid_width, keyboard_grid_x, keyboard_grid_y
from calculations.calc_user_login import lineEdit_height, lineEdit_width, lineEdit_x, lineEdit_y
from calculations.calc_user_login import filepath_button_height, filepath_button_width, filepath_button_x, filepath_button_y
from calculations.calc_user_login import filepath_label_height, filepath_label_width, filepath_label_x, filepath_label_y
from calculations.calc_user_login import error_message_height, error_message_width, error_message_x, error_message_y
from calculations.calc_generally import set_max_font_size_label, set_max_font_size_button_logout, set_max_font_size_button_confirm
from calculations.calc_user_login import set_max_font_size_buttons_keyboard, set_max_font_size_button_filepath, set_max_font_size_lineEdit, set_max_font_size_label_filepath
from ui.main_window import UiMainWindow

font = QtGui.QFont()
main_window = UiMainWindow()

class UiUserLogin(QtWidgets.QWidget):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        # define widget
        self.setObjectName("user_login")
        # define confirm button
        self.pushButton_confirm = QtWidgets.QPushButton(parent=self)
        self.pushButton_confirm.setGeometry(QtCore.QRect(confirm_button_x, confirm_button_y, confirm_button_width, confirm_button_height))
        self.pushButton_confirm.setText("Bestätigen")
        font.setFamily("Arial")
        font.setPointSize(set_max_font_size_button_confirm(self.pushButton_confirm))
        font.setBold(True)
        self.pushButton_confirm.setFont(font)
        self.pushButton_confirm.setStyleSheet("")
        self.pushButton_confirm.setCheckable(False)
        self.pushButton_confirm.setAutoDefault(False)
        self.pushButton_confirm.setDefault(False)
        self.pushButton_confirm.setObjectName("pushButton_confirm")
        # define header
        self.label_text1 = QtWidgets.QLabel(parent=self)
        self.label_text1.setGeometry(QtCore.QRect(header_x, header_y, header_width, header_height))
        self.label_text1.setText("Mitarbeiter-Login")
        font.setFamily("Arial")
        font.setPointSize(set_max_font_size_label(self.label_text1))
        font.setBold(True)
        font.setKerning(True)
        self.label_text1.setFont(font)
        self.label_text1.setStyleSheet("")
        self.label_text1.setScaledContents(False)
        self.label_text1.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_text1.setObjectName("label_text1")
        # create line for user input
        self.lineEdit_userInput = QtWidgets.QLineEdit(parent=self)
        self.lineEdit_userInput.setGeometry(QtCore.QRect(lineEdit_x, lineEdit_y, lineEdit_width, lineEdit_height))
        self.lineEdit_userInput.setPlaceholderText("Mitarbeiter-ID")
        font.setPointSize(set_max_font_size_lineEdit(self.lineEdit_userInput))
        font.setBold(False)
        self.lineEdit_userInput.setFont(font)
        self.lineEdit_userInput.setText("")
        self.lineEdit_userInput.setObjectName("lineEdit_userInput")
        self.lineEdit_userInput.returnPressed.connect(lambda: self.pushButton_confirm.click())  #press confirm when enter is pressed
        # define error message
        self.label_text2 = QtWidgets.QLabel(parent=self)
        self.label_text2.setGeometry(QtCore.QRect(error_message_x, error_message_y, error_message_width, error_message_height))
        self.label_text2.setText("Bitte geben Sie eine gültige Mitarbeiter-ID ein!")
        font.setFamily("Arial")
        font.setPointSize(set_max_font_size_label(self.label_text2))
        font.setBold(True)
        font.setKerning(True)
        self.label_text2.setFont(font)
        self.label_text2.setStyleSheet("color: red;")
        self.label_text2.setScaledContents(False)
        self.label_text2.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_text2.setObjectName("label_text2")
        self.label_text2.hide()
        # create keyboard grid
        self.gridWidget = QtWidgets.QWidget(parent=self)
        self.gridWidget.setGeometry(QtCore.QRect(keyboard_grid_x, keyboard_grid_y, keyboard_grid_width, keyboard_grid_height))
        font.setBold(False)
        self.gridWidget.setFont(font)
        self.gridWidget.setObjectName("gridWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        # create button delete
        self.pushButton_delete = QtWidgets.QPushButton(parent=self.gridWidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding
        )
        self.pushButton_delete.setText("delete")
        font.setPointSize(set_max_font_size_buttons_keyboard(self.pushButton_delete))
        self.pushButton_delete.setFont(font)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_delete.sizePolicy().hasHeightForWidth())
        self.pushButton_delete.setSizePolicy(sizePolicy)
        self.pushButton_delete.setObjectName("pushButton_delete")
        self.gridLayout.addWidget(self.pushButton_delete, 3, 8, 1, 3)
        # create backspace
        self.pushButton_backspace = QtWidgets.QPushButton(parent=self.gridWidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding
        )
        self.pushButton_backspace.setText("←")
        font.setPointSize(set_max_font_size_buttons_keyboard(self.pushButton_backspace))
        self.pushButton_backspace.setFont(font)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_backspace.sizePolicy().hasHeightForWidth())
        self.pushButton_backspace.setSizePolicy(sizePolicy)
        self.pushButton_backspace.setObjectName("pushButton_backspace")
        self.gridLayout.addWidget(self.pushButton_backspace, 0, 10, 1, 1)
        # create file-path button
        self.pushButton_filepath = QtWidgets.QPushButton(parent=self)
        self.pushButton_filepath.setGeometry(QtCore.QRect(filepath_button_x, filepath_button_y, filepath_button_width, filepath_button_height))
        self.pushButton_filepath.setText("Dateipfad ändern")
        font.setPointSize(set_max_font_size_button_filepath(self.pushButton_filepath))
        self.pushButton_filepath.setFont(font)
        self.pushButton_filepath.setObjectName("pushButton_filepath")
        # create file-path label
        self.label_filepath = QtWidgets.QLabel(parent=self)
        self.label_filepath.setGeometry(QtCore.QRect(filepath_label_x, filepath_label_y, filepath_label_width, filepath_label_height))
        self.label_filepath.setText("")
        # align file-path label horizontally right and vertically centered
        self.label_filepath.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignVCenter) # type: ignore
        self.label_filepath.setObjectName("label_filepath")
        # create exit button
        self.pushButton_exit = QtWidgets.QPushButton(parent=self)
        self.pushButton_exit.setGeometry(QtCore.QRect(logout_button_x, logout_button_y, logout_button_width, logout_button_height))
        self.pushButton_exit.setText("Beenden")
        self.pushButton_exit.setObjectName("pushButton_exit")
        font.setPointSize(set_max_font_size_button_logout(self.pushButton_exit))
        self.pushButton_exit.setFont(font)

        # connect keyboard-buttons to functions
        self.pushButton_backspace.clicked.connect(lambda: self.delete_last_letter())
        self.pushButton_delete.clicked.connect(lambda: self.delete_all_letters())
        self.pushButton_filepath.clicked.connect(lambda: self.choose_filepath())
        self.addKeyboardButtons()

        QtCore.QMetaObject.connectSlotsByName(self)

    # add_letter function for keyboard
    def add_letter(self, letter):
        current_text = self.lineEdit_userInput.text()
        self.lineEdit_userInput.setText(current_text + letter)
        self.lineEdit_userInput.setFocus()

    # delete_last_letter function for backspace button
    def delete_last_letter(self):
        current_text = self.lineEdit_userInput.text()
        new_text = current_text[:-1]
        self.lineEdit_userInput.setText(new_text)
        self.lineEdit_userInput.setFocus()

    # delete_all_letters function for delete button
    def delete_all_letters(self):
        current_text = self.lineEdit_userInput.text()
        new_text = current_text[: -len(current_text)]
        self.lineEdit_userInput.setText(new_text)
        self.lineEdit_userInput.setFocus()

    # choose_filepath function for filepath button
    def choose_filepath(self):
        self.filepath = QtWidgets.QFileDialog.getExistingDirectory(
            self, "Dateipfad auswählen"
        )
        self.label_filepath.setText(self.filepath)
        font.setPointSize(set_max_font_size_label_filepath(self.label_filepath))
        self.label_filepath.setFont(font)

        settings = QtCore.QSettings("Bilton", "Lampentest")
        settings.setValue("filepath", self.filepath)

    # addKeyboardButtons function for keyboard
    def addKeyboardButtons(self):
        buttons = [
            ("1", 0, 0, 1, 1),
            ("2", 0, 1, 1, 1),
            ("3", 0, 2, 1, 1),
            ("4", 0, 3, 1, 1),
            ("5", 0, 4, 1, 1),
            ("6", 0, 5, 1, 1),
            ("7", 0, 6, 1, 1),
            ("8", 0, 7, 1, 1),
            ("9", 0, 8, 1, 1),
            ("0", 0, 9, 1, 1),
            ("Q", 1, 0, 1, 1),
            ("W", 1, 1, 1, 1),
            ("E", 1, 2, 1, 1),
            ("R", 1, 3, 1, 1),
            ("T", 1, 4, 1, 1),
            ("Z", 1, 5, 1, 1),
            ("U", 1, 6, 1, 1),
            ("I", 1, 7, 1, 1),
            ("O", 1, 8, 1, 1),
            ("P", 1, 9, 1, 1),
            ("Ü", 1, 10, 1, 1),
            ("A", 2, 0, 1, 1),
            ("S", 2, 1, 1, 1),
            ("D", 2, 2, 1, 1),
            ("F", 2, 3, 1, 1),
            ("G", 2, 4, 1, 1),
            ("H", 2, 5, 1, 1),
            ("J", 2, 6, 1, 1),
            ("K", 2, 7, 1, 1),
            ("L", 2, 8, 1, 1),
            ("Ö", 2, 9, 1, 1),
            ("Ä", 2, 10, 1, 1),
            ("Y", 3, 0, 1, 1),
            ("X", 3, 1, 1, 1),
            ("C", 3, 2, 1, 1),
            ("V", 3, 3, 1, 1),
            ("B", 3, 4, 1, 1),
            ("N", 3, 5, 1, 1),
            ("M", 3, 6, 1, 1),
            ("_", 3, 7, 1, 1),
        ]
        
        for button in buttons:
            self.addKeyboardButton(*button)

    # addKeyboardButton function for keyboard
    def addKeyboardButton(self, character, row, column, rowSpan, columnSpan):
        button = QtWidgets.QPushButton(parent=self.gridWidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(button.sizePolicy().hasHeightForWidth())
        button.setSizePolicy(sizePolicy)
        button.setObjectName(f"pushButton_{character}")
        self.gridLayout.addWidget(button, row, column, rowSpan, columnSpan)

        button.clicked.connect(lambda: self.add_letter(character))
        button.setText(character)
        font.setPointSize(set_max_font_size_buttons_keyboard(button))
        button.setFont(font)